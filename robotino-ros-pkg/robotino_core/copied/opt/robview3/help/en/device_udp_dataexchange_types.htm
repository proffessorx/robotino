<!DOCTYPE HTML>
<html>
<head>
   <title>Data types</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<style type="text/css"> 
a { color: #0000FF; text-decoration: underline } 
a:visited {color: #0000FF } 
a:hover {color: #E4641C; text-decoration: underline } 
a.weblink {color: #0000FF; text-decoration: underline } 
a.weblink:visited {color: #0000FF} 
a.weblink:hover {color: #E4641C } 
a.popuplink {color: #FF0000; text-decoration: none} 
a.popuplink:visited {color: #FF0000} 
a.popuplink:hover {color: #FF0000; text-decoration: underline} 
a.filelink {color: #04BC14; text-decoration: none} 
a.filelink:visited {color: #04BC14} 
a.filelink:hover {color: #04BC14; text-decoration: underline} 
</style> 
<script type="text/javascript">
function ModelHandler(o1, o2)
  {
  if (document.hhctrl) document.hhctrl.outerHTML = ""; var X, Y, sl, a, ra, dir, ap, chmPath;
  ra = /::/; a = location.href.search(ra);   ra = /:/; a = location.href.search(ra);
  if (a == 2) X = 14; else X = 7; sl = "\\"; Y = location.href.lastIndexOf(sl);
  dir = location.href.substring(X, Y); ap = unescape(dir) + "\\Tools\\ModelHandler.exe";
  ShortCut = "<object id='hhctrl' classid='clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11'><param name='Command' value='ShortCut'><param name='Item1' value=',"+ap+", "+o1+" "+"\""+o2+"\""+"'></object>";
  document.body.insertAdjacentHTML("BeforeBegin", ShortCut); document.hhctrl.hhclick();
  }
</script>
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "device_udp_dataexchange_types.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<SCRIPT Language="JScript">
function parser(fn)
{
	var X, Y, sl, a, ra, link;
	ra = /:/;
	a = location.href.search(ra);
	if (a == 2)
		X = 14;
	else
		X = 7;
	sl = "\\";
	Y = location.href.lastIndexOf(sl) + 1;
	link = 'file:///' + location.href.substring(X, Y) + fn;
	location.href = link;
}
</SCRIPT>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#EBEBEB">
  <tr valign="middle">
    <td align="left">
      &nbsp;</td>
    <td align="right">
		<img border=0 src="festo_logo.bmp" 

align="right"></td>
   </tr>
  <tr valign="middle">
    <td align="left">
      <h1 class="p_Heading1"><span class="f_Heading1">Data types</span></h1>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="device_udp_dataexchange_checksum.htm"><img border=0 src="navigationprev.bmp" alt="Previous"></a>&nbsp;
     <a href="welcome.htm"><img border=0 src="navigationhome.bmp" alt="home"></a>&nbsp;
     <a href="device_udp_dataexchange_protocol_0.htm"><img border=0 src="navigationnext.bmp" alt="Next"></a>
     &nbsp;&nbsp;
     </span>
    </td>
   </tr>
</table>
<table width="100%" border="0" cellspacing="0" bgcolor="#EBEBEB">
  <td style="padding-right:5; padding-left:5; padding-top:0; padding-bottom:0;"><img width=100% height=2 src="navigationline.bmp"></td>
</table>

<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="middle"><td 

align="left">
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 10px 0px 10px 0px;"><table style="border:solid 2px #999999; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:57px; padding:0px; border:solid 1px #999999;"><p><span style="font-weight: bold;">Type</span></p>
</td>
<td style="vertical-align:top; width:113px; padding:0px; border:solid 1px #999999;"><p><span style="font-weight: bold;">Width in bytes</span></p>
</td>
<td style="vertical-align:top; width:1311px; padding:0px; border:solid 1px #999999;"><p><span style="font-weight: bold;">Description</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:57px; padding:0px; border:solid 1px #999999;"><p>UINT16</p>
</td>
<td style="vertical-align:top; width:113px; padding:0px; border:solid 1px #999999;"><p>2</p>
</td>
<td style="vertical-align:top; width:1311px; padding:0px; border:solid 1px #999999;"><p>Byte0: low</p>
<p>Byte1: high</p>
<p>On a little endian system a UINT16 data value can be copied directly into the payload.</p>
<p>Example:</p>
<p>//encoding</p>
<p class="p_CodeExample"><span class="f_CodeExample">uint16&nbsp;value&nbsp;=&nbsp;9873;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">char&nbsp;payload[2];</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">uint16*&nbsp;p&nbsp;=&nbsp;reinterpret_cast&lt;uint16*&gt;(&nbsp;payload&nbsp;);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">*p&nbsp;=&nbsp;value;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//decoding</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">value&nbsp;=&nbsp;*(&nbsp;reinterpret_cast&lt;const&nbsp;uint16*&gt;(&nbsp;payload&nbsp;)&nbsp;);</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:57px; padding:0px; border:solid 1px #999999;"><p>INT32</p>
</td>
<td style="vertical-align:top; width:113px; padding:0px; border:solid 1px #999999;"><p>4</p>
</td>
<td style="vertical-align:top; width:1311px; padding:0px; border:solid 1px #999999;"><p>Byte0: low</p>
<p>Byte3: high</p>
<p>On a little endian system a INT32 data value can be copied directly into the payload.</p>
<p>Example:</p>
<p>//encoding</p>
<p class="p_CodeExample"><span class="f_CodeExample">int32&nbsp;value&nbsp;=&nbsp;-3459873;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">char&nbsp;payload[4];</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">int32*&nbsp;p&nbsp;=&nbsp;reinterpret_cast&lt;int32*&gt;(&nbsp;payload&nbsp;);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">*p&nbsp;=&nbsp;value;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//decoding</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">value&nbsp;=&nbsp;*(&nbsp;reinterpret_cast&lt;const&nbsp;int32*&gt;(&nbsp;payload&nbsp;)&nbsp;);</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:57px; padding:0px; border:solid 1px #999999;"><p>UINT32</p>
</td>
<td style="vertical-align:top; width:113px; padding:0px; border:solid 1px #999999;"><p>4</p>
</td>
<td style="vertical-align:top; width:1311px; padding:0px; border:solid 1px #999999;"><p>Byte0: low</p>
<p>Byte3: high</p>
<p>On a little endian system a UINT32 data value can be copied directly into the payload.</p>
<p>Example:</p>
<p>//encoding</p>
<p class="p_CodeExample"><span class="f_CodeExample">uint32&nbsp;value&nbsp;=&nbsp;3459873;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">char&nbsp;payload[4];</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">uint32*&nbsp;p&nbsp;=&nbsp;reinterpret_cast&lt;uint32*&gt;(&nbsp;payload&nbsp;);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">*p&nbsp;=&nbsp;value;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//decoding</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">value&nbsp;=&nbsp;*(&nbsp;reinterpret_cast&lt;const&nbsp;uint32*&gt;(&nbsp;payload&nbsp;)&nbsp;);</span></p>
</td>
</tr>
</table>
</div>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
